# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - master
      - enabler/*
      - feature/*
      - bugfix/*
      - release
      - release/*

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true

- powershell: |
    git config --global user.email "azure-pipelie@ngx-materialize-ui.com"
    git config --global user.name "Azure Pipeline"
    cd ./libs/materialize-ui-core/
    npm version patch
    $v = node -p "const p = require('./package.json'); p.version;"
    cd..
    cd..
    git commit -a -m "Update of libs version [skip ci]"
    npm version $v -m "Taging version %s to repo [skip ci]"
    Write-Host "Branch is $Env:BUILD_SOURCEBRANCH, Version is $v"
  displayName: 'Create Version'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release'))

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm run lint
  displayName: 'npm lint'

- script: |
    npm run test:silent
  displayName: 'npm test'

- script: |
    npm run build
  displayName: 'npm build'

- task: PublishTestResults@2
  displayName: Publish Tests
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit/**/TESTS-*.xml'
    failTaskOnFailedTests: true
    testRunTitle: 'Unit Tests'

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage/materialize-ui-core/cobertura-coverage.xml'
    failIfCoverageEmpty: true

- task: Npm@1
  displayName: Publish ngx-materialize-ui-core
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release'))
  inputs:
    command: 'publish'
    workingDir: './dist/materialize-ui-core/'
    publishRegistry: 'useFeed'
    publishFeed: '76d1a33f-6ec9-4d51-b847-c88bf598f0f8/69fd8e36-8913-442e-8194-e546c25a3bce'

- powershell: |
    git push -u origin HEAD:$Env:BUILD_SOURCEBRANCH --tags
  displayName: 'Publish Version'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release'))